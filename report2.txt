import React, { useState } from "react";
import {
	BarChart,
	Bar,
	LineChart,
	Line,
	XAxis,
	YAxis,
	CartesianGrid,
	Tooltip,
	Legend,
	ResponsiveContainer,
} from "recharts";
import { Calendar, ChevronRight, User, FileText, Award, ArrowDown, ArrowUp, BookOpen, Users } from "lucide-react";

// Sample data
const schoolData = [
	{ name: "Green Valley Public School", performance: 88 },
	{ name: "Modern High School", performance: 85 },
	{ name: "Sunshine Academy", performance: 84 },
	{ name: "City Public School", performance: 62 },
	{ name: "Northern High School", performance: 65 },
];

const performanceTrend = [
	{ month: "Nov", performance: 70 },
	{ month: "Dec", performance: 73 },
	{ month: "Jan", performance: 75 },
	{ month: "Feb", performance: 76 },
	{ month: "Mar", performance: 74 },
	{ month: "Apr", performance: 78 },
];

const students = [
	{ id: 1, name: "Aditya Sharma", rollNo: "0801", attendance: 95, marks: 92, rank: 1 },
	{ id: 2, name: "Priya Patel", rollNo: "0802", attendance: 93, marks: 88, rank: 2 },
	{ id: 3, name: "Rahul Gupta", rollNo: "0803", attendance: 91, marks: 86, rank: 3 },
	{ id: 4, name: "Ananya Singh", rollNo: "0804", attendance: 94, marks: 84, rank: 4 },
	{ id: 5, name: "Vikram Verma", rollNo: "0805", attendance: 90, marks: 83, rank: 5 },
];

const TabNav = ({ activeTab, setActiveTab }) => (
	<div className="flex border-b mb-6">
		<button
			className={`px-4 py-2 font-medium text-sm focus:outline-none ${
				activeTab === "overview"
					? "border-b-2 border-blue-500 text-blue-600"
					: "text-gray-500 hover:text-gray-700"
			}`}
			onClick={() => setActiveTab("overview")}
		>
			Overview
		</button>
		<button
			className={`px-4 py-2 font-medium text-sm focus:outline-none ${
				activeTab === "students"
					? "border-b-2 border-blue-500 text-blue-600"
					: "text-gray-500 hover:text-gray-700"
			}`}
			onClick={() => setActiveTab("students")}
		>
			Student List
		</button>
	</div>
);

function DashboardMetrics() {
	const metrics = [
		{ title: "Avg. Performance", value: "76%", trend: "+2.3%" },
		{ title: "Tests This Month", value: "42", trend: "+8" },
		{ title: "Pass Rate", value: "84%", trend: "+1.5%" },
		{ title: "Attendance Rate", value: "91%", trend: "-0.5%" },
	];

	return (
		<div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
			{metrics.map((metric, index) => (
				<div key={index} className="bg-white p-4 rounded-lg shadow flex flex-col">
					<h3 className="text-sm font-medium text-gray-500 mb-1">{metric.title}</h3>
					<div className="flex items-end">
						<p className="text-2xl font-bold">{metric.value}</p>
					</div>
				</div>
			))}
		</div>
	);
}

function SchoolList({ onSchoolSelect }) {
	const sortedSchools = [...schoolData].sort((a, b) => b.performance - a.performance);

	return (
		<div className="bg-white p-5 rounded-lg shadow mb-6">
			<h3 className="text-lg font-semibold mb-4">School Performance for Class 1</h3>
			<div className="overflow-auto">
				<table className="min-w-full divide-y divide-gray-200">
					<thead className="bg-gray-50">
						<tr>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								School Name
							</th>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								Performance
							</th>
							<th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
								Action
							</th>
						</tr>
					</thead>
					<tbody className="bg-white divide-y divide-gray-200">
						{sortedSchools.map((school, index) => (
							<tr key={index} className="hover:bg-gray-50">
								<td className="px-6 py-4 whitespace-nowrap">
									<div className="text-sm font-medium text-gray-900">{school.name}</div>
								</td>
								<td className="px-6 py-4 whitespace-nowrap">
									<div className="text-sm">
										<span
											className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${
												school.performance >= 80
													? "bg-green-100 text-green-800"
													: school.performance >= 65
													? "bg-yellow-100 text-yellow-800"
													: "bg-red-100 text-red-800"
											}`}
										>
											{school.performance}%
										</span>
									</div>
								</td>
								<td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
									<button className="text-blue-600 hover:text-blue-900" onClick={onSchoolSelect}>
										View
									</button>
								</td>
							</tr>
						))}
					</tbody>
				</table>
			</div>
		</div>
	);
}

function TopBottomSchools({ onSchoolSelect }) {
	const sortedSchools = [...schoolData].sort((a, b) => b.performance - a.performance);
	const topSchools = sortedSchools.slice(0, 3);
	const bottomSchools = [...sortedSchools].sort((a, b) => a.performance - b.performance).slice(0, 3);

	return (
		<div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
			<div className="bg-white p-5 rounded-lg shadow">
				<div className="flex items-center mb-4">
					<ArrowUp className="w-5 h-5 text-green-600 mr-2" />
					<h3 className="text-lg font-semibold">Top Performing Schools</h3>
				</div>
				<div className="space-y-3">
					{topSchools.map((school, index) => (
						<div
							key={index}
							className="flex justify-between items-center p-3 hover:bg-blue-50 rounded-md cursor-pointer"
							onClick={onSchoolSelect}
						>
							<div className="flex items-center">
								<span className="font-medium text-sm w-8 text-center">{index + 1}.</span>
								<span className="text-gray-800">{school.name}</span>
							</div>
							<div className="flex items-center">
								<span className="font-semibold">{school.performance}%</span>
								<ChevronRight className="w-4 h-4 text-gray-400 ml-2" />
							</div>
						</div>
					))}
				</div>
			</div>
			<div className="bg-white p-5 rounded-lg shadow">
				<div className="flex items-center mb-4">
					<ArrowDown className="w-5 h-5 text-red-600 mr-2" />
					<h3 className="text-lg font-semibold">Bottom Performing Schools</h3>
				</div>
				<div className="space-y-3">
					{bottomSchools.map((school, index) => (
						<div
							key={index}
							className="flex justify-between items-center p-3 hover:bg-blue-50 rounded-md cursor-pointer"
							onClick={onSchoolSelect}
						>
							<div className="flex items-center">
								<span className="font-medium text-sm w-8 text-center">{index + 1}.</span>
								<span className="text-gray-800">{school.name}</span>
							</div>
							<div className="flex items-center">
								<span className="font-semibold">{school.performance}%</span>
								<ChevronRight className="w-4 h-4 text-gray-400 ml-2" />
							</div>
						</div>
					))}
				</div>
			</div>
		</div>
	);
}

function PerformanceTrendChart() {
	return (
		<div className="bg-white p-5 rounded-lg shadow mb-6">
			<h3 className="text-lg font-semibold mb-4">Performance Trend Over Time</h3>
			<ResponsiveContainer width="100%" height={300}>
				<LineChart data={performanceTrend}>
					<CartesianGrid strokeDasharray="3 3" />
					<XAxis dataKey="month" />
					<YAxis domain={[0, 100]} />
					<Tooltip />
					<Legend />
					<Line
						type="monotone"
						dataKey="performance"
						stroke="#3b82f6"
						strokeWidth={3}
						dot={{ r: 6 }}
						activeDot={{ r: 8 }}
					/>
				</LineChart>
			</ResponsiveContainer>
		</div>
	);
}

function StudentTable({ onStudentSelect }) {
	return (
		<div className="bg-white p-5 rounded-lg shadow mb-6">
			<div className="flex justify-between items-center mb-4">
				<h3 className="text-lg font-semibold">Students List</h3>
				<div className="relative">
					<input
						type="text"
						placeholder="Search student..."
						className="pl-8 pr-4 py-2 border border-gray-300 rounded-md"
					/>
					<div className="absolute left-3 top-2.5 text-gray-400">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							className="h-5 w-5"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								strokeLinecap="round"
								strokeLinejoin="round"
								strokeWidth={2}
								d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
							/>
						</svg>
					</div>
				</div>
			</div>
			<div className="overflow-x-auto">
				<table className="min-w-full divide-y divide-gray-200">
					<thead className="bg-gray-50">
						<tr>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								Roll No.
							</th>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								Student Name
							</th>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								Attendance
							</th>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								Marks
							</th>
							<th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
								Rank
							</th>
							<th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
								Action
							</th>
						</tr>
					</thead>
					<tbody className="bg-white divide-y divide-gray-200">
						{students.map((student) => (
							<tr key={student.id} className="hover:bg-gray-50">
								<td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{student.rollNo}</td>
								<td className="px-6 py-4 whitespace-nowrap">
									<div className="text-sm font-medium text-gray-900">{student.name}</div>
								</td>
								<td className="px-6 py-4 whitespace-nowrap">
									<span
										className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${
											student.attendance >= 90
												? "bg-green-100 text-green-800"
												: student.attendance >= 75
												? "bg-yellow-100 text-yellow-800"
												: "bg-red-100 text-red-800"
										}`}
									>
										{student.attendance}%
									</span>
								</td>
								<td className="px-6 py-4 whitespace-nowrap">
									<span
										className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${
											student.marks >= 80
												? "bg-green-100 text-green-800"
												: student.marks >= 65
												? "bg-yellow-100 text-yellow-800"
												: "bg-red-100 text-red-800"
										}`}
									>
										{student.marks}%
									</span>
								</td>
								<td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">#{student.rank}</td>
								<td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
									<button className="text-blue-600 hover:text-blue-900" onClick={onStudentSelect}>
										View
									</button>
								</td>
							</tr>
						))}
					</tbody>
				</table>
			</div>
		</div>
	);
}

function TopBottomStudents({ onStudentSelect }) {
	const topStudents = students.slice(0, 2);
	const bottomStudents = [...students].sort((a, b) => a.marks - b.marks).slice(0, 3);

	return (
		<div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
			<div className="bg-white p-5 rounded-lg shadow">
				<div className="flex items-center mb-4">
					<ArrowUp className="w-5 h-5 text-green-600 mr-2" />
					<h3 className="text-lg font-semibold">Top Performing Students</h3>
				</div>
				<div className="space-y-3">
					{topStudents.map((student, index) => (
						<div
							key={index}
							className="flex justify-between items-center p-3 hover:bg-blue-50 rounded-md cursor-pointer"
							onClick={onStudentSelect}
						>
							<div className="flex items-center">
								<div className="flex items-center justify-center w-6 h-6 rounded-full bg-blue-100 text-blue-800 text-xs font-bold mr-3">
									{index + 1}
								</div>
								<span className="text-gray-800">{student.name}</span>
							</div>
							<div className="flex items-center">
								<span className="font-semibold">{student.marks}%</span>
								<ChevronRight className="w-4 h-4 text-gray-400 ml-2" />
							</div>
						</div>
					))}
				</div>
			</div>
			<div className="bg-white p-5 rounded-lg shadow">
				<div className="flex items-center mb-4">
					<ArrowDown className="w-5 h-5 text-red-600 mr-2" />
					<h3 className="text-lg font-semibold">Bottom Performing Students</h3>
				</div>
				<div className="space-y-3">
					{bottomStudents.map((student, index) => (
						<div
							key={index}
							className="flex justify-between items-center p-3 hover:bg-blue-50 rounded-md cursor-pointer"
							onClick={onStudentSelect}
						>
							<div className="flex items-center">
								<div className="flex items-center justify-center w-6 h-6 rounded-full bg-red-100 text-red-800 text-xs font-bold mr-3">
									{index + 1}
								</div>
								<span className="text-gray-800">{student.name}</span>
							</div>
							<div className="flex items-center">
								<span className="font-semibold">{student.marks}%</span>
								<ChevronRight className="w-4 h-4 text-gray-400 ml-2" />
							</div>
						</div>
					))}
				</div>
			</div>
		</div>
	);
}

export default function SchoolDashboard() {
	const [activeLayer, setActiveLayer] = useState(1);
	const [activeTab, setActiveTab] = useState("overview");
	const [dateRange, setDateRange] = useState("Last 30 days");

	const handleSchoolSelect = () => setActiveLayer(2);
	const handleClassSelect = () => setActiveLayer(3);
	const handleStudentSelect = () => setActiveLayer(4);
	const handleBack = () => setActiveLayer(activeLayer - 1);

	// Layer 1: Dashboard
	const renderDashboard = () => {
		return (
			<div>
				<div className="flex justify-between items-center mb-6">
					<h2 className="text-xl font-semibold text-gray-800">School Performance Summary</h2>
					<div className="flex items-center">
						<Calendar className="w-5 h-5 text-gray-500 mr-2" />
						<select
							className="bg-white border border-gray-300 rounded-md px-3 py-1.5 text-sm"
							value={dateRange}
							onChange={(e) => setDateRange(e.target.value)}
						>
							<option>Last 7 days</option>
							<option>Last 30 days</option>
							<option>Last 3 months</option>
							<option>Last 6 months</option>
							<option>Last year</option>
						</select>
					</div>
				</div>

				<DashboardMetrics />
				<TopBottomSchools onSchoolSelect={handleSchoolSelect} />
				<SchoolList onSchoolSelect={handleSchoolSelect} />
			</div>
		);
	};

	// Layer 3: Class Report
	const renderClassReport = () => {
		return (
			<div>
				<button className="flex items-center text-blue-600 mb-6" onClick={handleBack}>
					<ChevronRight className="w-4 h-4 transform rotate-180 mr-1" />
					<span>Back to School Report</span>
				</button>

				<div className="bg-white p-5 rounded-lg shadow mb-6">
					<h2 className="text-2xl font-bold text-gray-800">Class 1 Performance Report</h2>
				</div>

				<TabNav activeTab={activeTab} setActiveTab={setActiveTab} />

				{activeTab === "overview" ? (
					<>
						<TopBottomStudents onStudentSelect={handleStudentSelect} />
						<PerformanceTrendChart />
					</>
				) : (
					<StudentTable onStudentSelect={handleStudentSelect} />
				)}
			</div>
		);
	};

	// Layer 2: School Report
	const renderSchoolReport = () => {
		return (
			<div>
				<button className="flex items-center text-blue-600 mb-6" onClick={handleBack}>
					<ChevronRight className="w-4 h-4 transform rotate-180 mr-1" />
					<span>Back to Dashboard</span>
				</button>

				<div className="bg-white p-5 rounded-lg shadow mb-6">
					<div className="flex flex-col md:flex-row md:justify-between">
						<div>
							<h2 className="text-2xl font-bold text-gray-800">Green Valley Public School</h2>
							<div className="flex flex-col sm:flex-row sm:space-x-6 text-sm text-gray-600 mt-1">
								<span>UDISE: 123456789012</span>
								<span>Location: Sector 12, Green Valley</span>
							</div>
						</div>
						<div className="mt-4 md:mt-0 flex items-center bg-blue-50 px-4 py-2 rounded-lg">
							<User className="w-5 h-5 text-blue-600 mr-2" />
							<div>
								<span className="text-sm text-gray-600">Total Students</span>
								<p className="font-bold text-xl">350</p>
							</div>
						</div>
					</div>
				</div>

				<div className="bg-white p-5 rounded-lg shadow mb-6">
					<div className="flex justify-between items-center" onClick={handleClassSelect}>
						<h3 className="text-lg font-semibold">View Classes</h3>
						<button className="px-4 py-2 bg-blue-600 text-white rounded-md">View Class Details</button>
					</div>
				</div>
			</div>
		);
	};

	// Layer 4: Student Report
	const renderStudentReport = () => {
		return (
			<div>
				<button className="flex items-center text-blue-600 mb-6" onClick={handleBack}>
					<ChevronRight className="w-4 h-4 transform rotate-180 mr-1" />
					<span>Back to Class Report</span>
				</button>

				<div className="bg-white p-5 rounded-lg shadow mb-6">
					<div className="flex flex-col md:flex-row justify-between items-start md:items-center">
						<div>
							<h2 className="text-2xl font-bold text-gray-800">Aditya Sharma</h2>
							<div className="flex flex-col sm:flex-row sm:space-x-6 text-sm text-gray-600 mt-1">
								<span>Class 1</span>
								<span>Roll No.: 0801</span>
							</div>
						</div>
						<div className="mt-4 md:mt-0 bg-blue-100 text-blue-800 px-4 py-2 rounded-lg flex items-center">
							<Award className="w-5 h-5 mr-2" />
							<div>
								<span className="text-sm">Rank in Class</span>
								<p className="font-bold text-xl">1</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		);
	};

	// Main renderer based on active layer
	const renderContent = () => {
		switch (activeLayer) {
			case 1:
				return renderDashboard();
			case 2:
				return renderSchoolReport();
			case 3:
				return renderClassReport();
			case 4:
				return renderStudentReport();
			default:
				return renderDashboard();
		}
	};

	return (
		<div className="min-h-screen bg-gray-50">
			<main className="container mx-auto px-4 py-6">{renderContent()}</main>
		</div>
	);
}
